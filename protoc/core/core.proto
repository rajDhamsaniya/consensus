// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package core;

option go_package = "protoc/core";

// import "study/GitHub/grpc/protoc/contractcode/contractcode.proto";
import "google/protobuf/empty.proto";
import "protoc/gossip/gossip.proto";

// option go_package = ".";
// The greeting service definition.
service PeerManager {
	rpc InitContract(google.protobuf.Empty) returns (ExecResponse) {}
	rpc ExecuteTransaction(Executetx) returns(ExecResponse) {}
	rpc ValidateBlock(gossip.Block) returns(google.protobuf.Empty) {}
}

message Executetx {
	string tx = 1;
	repeated string Args = 2;
	string invokerId = 3;
	enum InvokerType {
		CLIENT = 0;
		PEER = 1;
	}
	InvokerType iType = 4;
}

message ExecResponse {
	string Sign =1;
	bytes result=2;
}

