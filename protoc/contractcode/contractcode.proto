syntax = "proto3";
package contractcode;

import "google/protobuf/empty.proto";

service Contract{

    rpc InitContract(google.protobuf.Empty) returns (stream transactionResponse) {}

    rpc Invoke(contractInfo) returns (stream transactionResponse) {}
}


message infoMsg{
    enum MsgType {
        SUCESS = 0;
        ERROR = 1;
    }
    
    string Msg = 1;
    MsgType type = 2;
}

message transferMessage{

    string UserId = 1;
    string FromAccId = 2;
    string ToAccId = 3;
    int32 Amount = 4;
}

message stateInfo {

    enum MsgType {
        SUCESS = 0;
        ERROR = 1;
    }
    MsgType Msg = 1;
    bytes Payload = 2;
    string Sign = 3;
}

message userInfo {

    string UserId = 1;
    string UserName = 2;
    int32 Balance = 3;
}

message getState {
    string Key = 1;
	string Version = 2;
}

message putState {
    string Id = 1;
    repeated valueInfo Val = 2;
}

message deleteState {
	string Key = 1;
	string Version = 2;
}

message contractInfo {
	string Transaction = 1;
	repeated string Args = 2;
}

message valueInfo {
	string Key=1;
	string Value=2;
}

message response {
	putState Result = 2;

}

message transactionResponse {

	enum QueryType {
		GETSTATE = 0;
		PUTSTATE = 1;
		DELSTATE = 2;
	}
	QueryType Query = 1;
	bytes Payload = 2; 
}


